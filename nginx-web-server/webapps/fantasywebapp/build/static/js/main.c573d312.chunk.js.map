{"version":3,"sources":["actions/types.js","api/BackEnd.js","components/home/CreateLeagueForm.js","components/home/CreateLeagueView.js","components/home/LeagueListView.js","actions/index.js","components/home/LeagueList.js","components/league/LeagueView.js","components/scores/ScoresList.js","components/scores/Scores.js","components/router/AppRouter.js","components/App.js","reducers/authReducer.js","reducers/leagueReducer.js","reducers/scoresReducer.js","reducers/index.js","index.js"],"names":["SIGN_IN","SIGN_OUT","SET_AUTH_STATE","GET_ALL_LEAGUES","GET_LEAGUE","SET_LEAGUE","GET_SCORES","axios","create","CreateLeagueForm","props","onSubmit","required","value","undefined","handleSubmit","values","submitting","class","name","placeholder","validate","input","meta","error","touched","style","color","type","CreateLeagueView","history","useHistory","a","json_values","JSON","stringify","BackEnd","post","then","response","goBack","window","alert","LeagueListView","this","getAllLeagues","map","1","2","leagues","league","to","React","Component","connect","state","dispatch","get","payload","data","LeagueList","LeagueView","getLeague","leagueid","teams","team","className","id","url","renderTeams","current_league","league_id","ScoresList","activeIndex","handleClick","e","titleProps","index","newIndex","setState","sorted_scores","current_score","sort","b","parseInt","points","detailedScore","players","playerList","Object","keys","key","player","Table","Row","Cell","_","startCase","toLower","categories","batting","bowling","fielding","awards","scores","score","Accordion","Title","active","onClick","Icon","owner","Content","size","unstackable","compact","Header","HeaderCell","Body","styled","fluid","getScores","Scores","useParams","useRouteMatch","path","AppRouter","App","console","log","isSignedIn","auth","signIn","user","setAuthState","authState","INITIAL_STATE","userId","auth_token","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c573d312.chunk.js","sourcesContent":["export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const SET_AUTH_STATE = \"SET_AUTH_STATE\";\n\nexport const GET_ALL_LEAGUES = \"GET_ALL_LEAGUES\";\nexport const GET_LEAGUE = \"GET_LEAGUE\";\nexport const SET_LEAGUE = \"SET_LEAGUE\";\n\nexport const GET_SCORES = \"GET_SCORES\";\n","import axios from \"axios\";\n\nexport default axios.create();\n","import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\n\nconst CreateLeagueForm = (props) => {\n  const { onSubmit } = props;\n  const required = (value) => (value ? undefined : \"Required\");\n  return (\n    // You can give the fields of the form to be submitted as a child of that component!!\n    <Form onSubmit={onSubmit}>\n      {({ handleSubmit, values, submitting }) => (\n        <form class=\"ui form\" onSubmit={handleSubmit}>\n          <div>\n            <Field\n              name=\"leagueName\"\n              placeholder=\"League Name\"\n              validate={required}\n            >\n              {({ input, meta, placeholder }) => (\n                <div class=\"required field\">\n                  <label>League Name</label>\n                  <input {...input} placeholder={placeholder} />\n                  {meta.error && meta.touched && (\n                    <span style={{ color: \"red\" }}>{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n\n            <Field\n              name=\"teams_per_league\"\n              placeholder=\"teams per league\"\n              validate={required}\n            >\n              {({ input, meta, placeholder }) => (\n                <div class=\"required field\">\n                  <label>Teams Per League</label>\n                  <input {...input} placeholder={placeholder} />\n                  {meta.error && meta.touched && (\n                    <span style={{ color: \"red\" }}>{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n\n            <Field\n              name=\"salarycap\"\n              placeholder=\"Salary Cap\"\n              validate={required}\n            >\n              {({ input, meta, placeholder }) => (\n                <div class=\"required field\">\n                  <label>Salary Cap (In Crores) Per Team</label>\n                  <input {...input} placeholder={placeholder} />\n                  {meta.error && meta.touched && (\n                    <span style={{ color: \"red\" }}>{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n\n            <button class=\"ui button\" type=\"submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </Form>\n  );\n};\n\nexport default CreateLeagueForm;\n","import React from \"react\";\nimport CreateLeagueForm from \"./CreateLeagueForm\";\nimport BackEnd from \"../../api/BackEnd\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateLeagueView = () => {\n  let history = useHistory();\n\n  // When this form is submitted, we will send a axios request back to our\n  // db to submit it\n  // Ideally this should have the league id as well...lets get it to it later!!\n  const onSubmit = async (values) => {\n    const json_values = JSON.stringify(values);\n    await BackEnd.post(\"/league\", json_values).then(\n      (response) => {\n        // Go Back by 1 to the leagues page\n        history.goBack();\n      },\n      (error) => {\n        // We Should populate the error here and let the user know that we\n        // could not create the league\n        window.alert(error);\n      }\n    );\n  };\n\n  return (\n    <div class=\"ui two column centered grid\">\n      <div class=\"row\">\n        <div class=\"column\">\n          <h2>Create League ...</h2>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"column\">\n          <CreateLeagueForm onSubmit={onSubmit}></CreateLeagueForm>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateLeagueView;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllLeagues } from \"../../actions/index\";\nimport { Link } from \"react-router-dom\";\nimport LeagueItemView from \"./LeagueItemView\";\n\n// We will get the list of actions at later point!!\nclass LeagueListView extends React.Component {\n  componentDidMount() {\n    this.props.getAllLeagues();\n  }\n  // Here will have to create the list of leagues and button to create a new league\n\n  render() {\n    const map = {\n      1: \"Operation Kill Sree\",\n      2: \"The OG\",\n    };\n\n    const leagues = this.props.leagues.map((league) => {\n      return (\n        <div class=\"row\" key={league}>\n          <div class=\"column\" key={league}>\n            <Link to={`/league/${league}`}>{map[league]}</Link>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div class=\"ui two column grid container\">\n        <div class=\"row\"></div>\n        <div class=\"row\">\n          <h2>Leagues</h2>\n        </div>\n        {leagues}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { leagues: state.league.leagues };\n};\n\nexport default connect(mapStateToProps, { getAllLeagues })(LeagueListView);\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  SET_AUTH_STATE,\n  GET_ALL_LEAGUES,\n  GET_LEAGUE,\n  SET_LEAGUE,\n  GET_SCORES,\n} from \"./types\";\nimport BackEnd from \"../api/BackEnd\";\n\n// Action has a payload and type\n\nexport const signIn = (user) => {\n  return {\n    type: SIGN_IN,\n    payload: {\n      user: user,\n    },\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const setAuthState = (authState) => {\n  return {\n    type: SET_AUTH_STATE,\n    payload: {\n      authState: authState,\n    },\n  };\n};\n\nexport const getAllLeagues = () => async (dispatch) => {\n  const response = await BackEnd.get(\"/api/leagues\");\n\n  dispatch({\n    type: GET_ALL_LEAGUES,\n    payload: response.data,\n  });\n};\n\nexport const getLeague = (league_id) => async (dispatch) => {\n  const response = await BackEnd.get(`/api/league/${league_id}`);\n\n  dispatch({\n    type: GET_LEAGUE,\n    payload: response.data,\n  });\n};\n\nexport const setLeague = (league) => {\n  return {\n    type: SET_LEAGUE,\n    payload: league,\n  };\n};\n\nexport const getScores = (id) => async (dispatch) => {\n  const response = await BackEnd.get(`/api/league/${id}/getscores`);\n\n  dispatch({\n    type: GET_SCORES,\n    payload: response.data,\n  });\n};\n","import React from \"react\";\nimport LeagueListView from \"./LeagueListView\";\n\n// Here is where will use the routes and get the history object and then\n// go back to previous page after the league creation\nconst LeagueList = () => {\n  return <LeagueListView></LeagueListView>;\n};\n\nexport default LeagueList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLeague } from \"../../actions/index\";\nimport { Link } from \"react-router-dom\";\n\nclass LeagueView extends React.Component {\n  componentDidMount() {\n    this.props.getLeague(this.props.leagueid);\n  }\n\n  renderTeams() {\n    if (this.props.league !== null) {\n      return this.props.league.teams.map((team) => {\n        return (\n          <div className=\"item\" key={team.id}>\n            <div className=\"content\">{team.name}</div>\n          </div>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"ui two column grid\">\n        <div class=\"row\"></div>\n        <div class=\"row\">\n          <div class=\"column\">\n            {/* <div className=\"right floated right aligned six wide column\"> */}\n            <button className=\"ui button\">\n              <i className=\"plus icon\" />\n              <Link to={`${this.props.url}/createteam`}>Create Team</Link>\n            </button>\n            {/* </div> */}\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"column\">\n            <h2>Teams</h2>\n            <div className=\"ui list\">{this.renderTeams()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    league: state.league.current_league,\n  };\n};\n\nexport default connect(mapStateToProps, { getLeague })(LeagueView);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getScores } from \"../../actions/index\";\nimport \"./ScoresList.css\";\nimport { Accordion, Icon, Item, Table } from \"semantic-ui-react\";\nimport _ from \"lodash\";\n\nclass ScoresList extends React.Component {\n  state = { activeIndex: -1 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const sorted_scores = this.props.current_score.sort(\n      (a, b) => parseInt(b.points) - parseInt(a.points)\n    );\n\n    const detailedScore = (players) => {\n      const playerList = Object.keys(players).map((key) => players[key]);\n\n      const sortedPlayers = playerList.sort(\n        (a, b) => parseInt(b.points) - parseInt(a.points)\n      );\n      const playersItems = playerList.map((player, index) => {\n        return (\n          <Table.Row key={index}>\n            <Table.Cell>{_.startCase(_.toLower(player.name))}</Table.Cell>\n            <Table.Cell>{player.points}</Table.Cell>\n            <Table.Cell>{player.categories.batting}</Table.Cell>\n            <Table.Cell>{player.categories.bowling}</Table.Cell>\n            <Table.Cell>{player.categories.fielding}</Table.Cell>\n            <Table.Cell>{player.categories.awards}</Table.Cell>\n          </Table.Row>\n        );\n      });\n\n      return playersItems;\n    };\n\n    const scores = sorted_scores.map((score, index) => {\n      const { activeIndex } = this.state;\n      return (\n        <div>\n          <Accordion.Title\n            active={activeIndex === index}\n            index={index}\n            onClick={this.handleClick}\n          >\n            <div class=\"ui two column grid\">\n              <div class=\"column left aligned\">\n                <Icon name=\"dropdown\" />\n                <span>{score.owner}</span>\n              </div>\n              <div class=\"column right aligned\">\n                <span>{score.points}</span>\n              </div>\n            </div>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === index}>\n            <Table size=\"small\" unstackable compact>\n              <Table.Header>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Points</Table.HeaderCell>\n                <Table.HeaderCell>Batting</Table.HeaderCell>\n                <Table.HeaderCell>Bowling</Table.HeaderCell>\n                <Table.HeaderCell>Fielding</Table.HeaderCell>\n                <Table.HeaderCell>Awards</Table.HeaderCell>\n              </Table.Header>\n\n              <Table.Body>{detailedScore(score.players)}</Table.Body>\n            </Table>\n          </Accordion.Content>\n        </div>\n      );\n    });\n\n    const map = {\n      1: \"Operation Kill Sree\",\n      2: \"The OG\",\n    };\n\n    const customMessage = {\n      1: \"Hope Sree Crashes and Burns\",\n      2: \"Kothari is a fat bastard\",\n    };\n\n    return (\n      <div class=\"ui one column grid container\">\n        <div class=\"row\"></div>\n        <div class=\"row\"></div>\n        <div class=\"row\">\n          <h2>{map[this.props.leagueid]}</h2>\n        </div>\n        <div class=\"row\"></div>\n        <div class=\"row\">\n          <div class=\"column\">\n            <Accordion styled fluid>\n              {scores}\n            </Accordion>\n          </div>\n        </div>\n        <div class=\"row\"></div>\n        <div class=\"row\"></div>\n        <div class=\"row\"></div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.getScores(this.props.leagueid);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    current_score: state.scores.current_score,\n  };\n};\n\nexport default connect(mapStateToProps, { getScores })(ScoresList);\n","import React from \"react\";\nimport ScoresList from \"./ScoresList\";\nimport { useParams, useRouteMatch } from \"react-router-dom\";\n\nconst Scores = () => {\n  let { leagueid } = useParams();\n  let { path, url } = useRouteMatch();\n\n  return <ScoresList leagueid={leagueid} path={path} url={url} />;\n};\n\nexport default Scores;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport TeamView from \"../team/TeamView\";\nimport CreateLeagueView from \"../home/CreateLeagueView\";\nimport CreateTeamView from \"../league/CreateTeamView\";\nimport LeagueList from \"../home/LeagueList\";\nimport League from \"../league/League\";\nimport Scores from \"../scores/Scores\";\n\nconst Leagues = () => {\n  let { path, url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/team/:teamid`}>\n        <TeamView />\n      </Route>\n      <Route path={`${path}/createteam`}>\n        <CreateTeamView />\n      </Route>\n      <Route path={`${path}`}>\n        <League />\n      </Route>\n    </Switch>\n  );\n};\n\nconst AppRouter = (props) => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/league/:leagueid\">\n          <Scores />\n        </Route>\n        <Route path=\"/createleague\">\n          <CreateLeagueView />\n        </Route>\n        <Route path=\"/\">\n          <LeagueList />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport { signIn, setAuthState } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport AppRouter from \"./router/AppRouter\";\nimport Loading from \"./util/Loading\";\n\n// This is a function based component\n// Ideally if the user is signed In, display the home page or the previous saved state, whatever!!\n// The previously loaded state will come from te backend as a JSON -- Duh!!\n// We'll also need a mapStateToProps here\n\n// So what properties does the app have\n// User Details and Whether User is signed in or not??\n\nclass App extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    // For now lets skip the login flow\n    // if (this.props.isSignedIn == null){\n    //     return <Loading></Loading>\n    // }else{\n    //     return <AppRouter isSignedIn={this.props.isSignedIn}></AppRouter>\n    // }\n    console.log(\"App Loaded\");\n    return (\n      <div class=\"ui container\">\n        <AppRouter></AppRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, setAuthState })(App);\n","// Every reducer will have a set of actions to define logic for!\n// Then we have the initial state!! <-- this is what we will access every time. THe actual data we are interested in\n// The the final function which will take the state and an action <-- this is the core reducer functopm\nimport { SIGN_IN, SIGN_OUT, SET_AUTH_STATE } from \"../actions/types\";\n\n// Initializer state for our state object\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n  auth_token: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true,\n        userId: action.payload.userId,\n        auth_token: action.payload.auth_token,\n      };\n\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null, auth_token: null };\n\n    case SET_AUTH_STATE:\n      return {\n        ...state,\n        isSignedIn: action.payload.authState.isSignedIn,\n        userId: action.payload.authState.userId,\n        auth_token: action.payload.authState.auth_token,\n      };\n    default:\n      return state;\n  }\n};\n","import { GET_ALL_LEAGUES, GET_LEAGUE, SET_LEAGUE } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  leagues: [],\n  current_league: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_ALL_LEAGUES:\n      return { ...state, leagues: action.payload };\n\n    case GET_LEAGUE:\n      return { ...state, current_league: action.payload };\n\n    case SET_LEAGUE:\n      return { ...state, current_league: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { GET_SCORES } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  current_score: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_SCORES:\n      return { ...state, current_score: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport leagueReducer from \"./leagueReducer\";\nimport scoresReducer from \"./scoresReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  league: leagueReducer,\n  scores: scoresReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport thunk from \"redux-thunk\";\nimport \"semantic-ui-css/semantic.css\";\n\n// npm install --save redux react-redux redux-think react-router-dom lodash\n\n// document is an important global object -- this could contain a lot of stuff!!\n\n// There are three important things needed for a Redux Store\n// The store itself (called via createStore duh...), the Provider which takes the store and encapsulates the the whole app\n// the createStore will take a list of reducers!!...and also a list of any middelware (things like reduc_thunk)\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\n// The encapsulation\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}