{"version":3,"sources":["actions/types.js","api/BackEnd.js","actions/index.js","components/league/ManageLeagueView.js","components/league/ManageLeague.js","components/home/LeagueListView.js","components/home/LeagueList.js","components/league/BarChartRace.js","components/league/LeagueView.js","components/league/League.js","components/router/AppRouter.js","components/App.js","reducers/authReducer.js","reducers/leagueReducer.js","reducers/scoresReducer.js","reducers/index.js","index.js"],"names":["SIGN_IN","SIGN_OUT","SET_AUTH_STATE","GET_ALL_LEAGUES","GET_LEAGUE","SET_LEAGUE","GET_SCORES","GET_MATCHES","axios","create","getLeague","league_id","dispatch","a","BackEnd","get","response","type","payload","data","ManageLeagueView","props","state","selectedTeam","selectedPlayer","selectedMatchDay","error","league","renderDropButton","index","active","Button","icon","value","onClick","e","setState","_","cloneDeep","player","teams","players","player2","open","push","Icon","color","name","renderDeleteButton","splice","this","Form","Grid","container","Row","Column","Header","as","width","Dropdown","placeholder","fluid","selection","options","map","team","key","text","onChange","matches","match","search","label","verticalAlign","size","setLeague","leagueid","divided","Label","start","end","getMatches","React","Component","connect","current_league","put","ManageLeague","useParams","useRouteMatch","path","url","console","log","LeagueListView","getAllLeagues","leagues","class","to","$oid","LeagueList","BarChartRace","startAnimation","matchNum","length","clearInterval","startAnimationInterval","intervalRunning","setInterval","textAlign","disabled","backgroundColor","padding","itemHeight","gap","titleStyle","font","valueStyle","LeagueView","activeIndex","handleClick","titleProps","newIndex","current_score","sorted_scores","sort","b","parseInt","points","detailedScore","condition","Object","keys","playerList","playersItems","slice","Table","Cell","startCase","toLower","categories","batting","bowling","fielding","awards","scores","filter","score","owner","Accordion","Title","Content","unstackable","compact","HeaderCell","Body","freeagentscores","styled","className","scores_by_match","getScores","scoresbyowner","scoresbymatch","id","League","Leagues","AppRouter","exact","App","isSignedIn","auth","signIn","user","setAuthState","authState","INITIAL_STATE","userId","auth_token","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.eab85f5f.chunk.js","sourcesContent":["export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const SET_AUTH_STATE = \"SET_AUTH_STATE\";\r\n\r\nexport const GET_ALL_LEAGUES = \"GET_ALL_LEAGUES\";\r\nexport const GET_LEAGUE = \"GET_LEAGUE\";\r\nexport const SET_LEAGUE = \"SET_LEAGUE\";\r\n\r\nexport const GET_SCORES = \"GET_SCORES\";\r\n\r\nexport const GET_MATCHES = \"GET_MATCHES\";\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create();\r\n","import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  SET_AUTH_STATE,\r\n  GET_ALL_LEAGUES,\r\n  GET_LEAGUE,\r\n  SET_LEAGUE,\r\n  GET_SCORES,\r\n  GET_MATCHES,\r\n} from \"./types\";\r\nimport BackEnd from \"../api/BackEnd\";\r\n\r\n// Action has a payload and type\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: {\r\n      user: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const setAuthState = (authState) => {\r\n  return {\r\n    type: SET_AUTH_STATE,\r\n    payload: {\r\n      authState: authState,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getAllLeagues = () => async (dispatch) => {\r\n  const response = await BackEnd.get(\"/api/league\");\r\n\r\n  dispatch({\r\n    type: GET_ALL_LEAGUES,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const getLeague = (league_id) => async (dispatch) => {\r\n  const response = await BackEnd.get(`/api/league/${league_id}`);\r\n\r\n  dispatch({\r\n    type: GET_LEAGUE,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const setLeague = (league_id, league) => async (dispatch) => {\r\n  const response = await BackEnd.put(`/api/league/${league_id}`, league);\r\n\r\n  dispatch({\r\n    type: SET_LEAGUE,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const getScores = (id) => async (dispatch) => {\r\n  const response = await BackEnd.get(`/api/league/${id}/getscores`);\r\n\r\n  dispatch({\r\n    type: GET_SCORES,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const getMatches = () => async (dispatch) => {\r\n  const response = await BackEnd.get(\"/api/match\");\r\n\r\n  dispatch({\r\n    type: GET_MATCHES,\r\n    payload: response.data,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMatches, getLeague, setLeague } from \"../../actions/index\";\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Tab,\r\n  Dropdown,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\n\r\nclass ManageLeagueView extends React.Component {\r\n  render() {\r\n    const teams = () => {\r\n      return this.state.league\r\n        ? this.state.league.teams.map((team, index) => {\r\n            return {\r\n              key: index,\r\n              text: team.name,\r\n              value: index,\r\n            };\r\n          })\r\n        : [];\r\n    };\r\n\r\n    const playerColor = (active) => {\r\n      if (active === 1) {\r\n        return \"blue\";\r\n      } else {\r\n        return \"red\";\r\n      }\r\n    };\r\n\r\n    const renderDropButton = (index, active) => {\r\n      if (active === 1) {\r\n        return (\r\n          <Button\r\n            icon\r\n            value={index}\r\n            onClick={(e, data) => {\r\n              if (\r\n                this.state.selectedTeam === null ||\r\n                this.selectedMatchDay === null\r\n              ) {\r\n                this.setState({ error: \"Select Team And Match\" });\r\n                return;\r\n              }\r\n\r\n              if (this.state.error) {\r\n                this.setState({ error: \"\" });\r\n              }\r\n\r\n              const league = _.cloneDeep(this.state.league);\r\n              const player =\r\n                league.teams[this.state.selectedTeam].players[data.value];\r\n              player[\"end\"] = this.state.selectedMatchDay + 1;\r\n              player[\"active\"] = 0;\r\n              league.teams[this.state.selectedTeam].players[data.value] =\r\n                player;\r\n\r\n              // Add player back to Open\r\n              const player2 = _.cloneDeep(player);\r\n              player2[\"owner\"] = \"Open\";\r\n              player2[\"start\"] = 0;\r\n              player2[\"end\"] = 100;\r\n              delete player2[\"active\"];\r\n              league.open.push(player2);\r\n\r\n              this.setState({ league: league });\r\n            }}\r\n          >\r\n            <Icon color=\"red\" name=\"cancel\" />\r\n          </Button>\r\n        );\r\n      } else {\r\n        return <div></div>;\r\n      }\r\n    };\r\n\r\n    const renderDeleteButton = (index, active) => {\r\n      if (active === 0) {\r\n        return (\r\n          <Button\r\n            icon\r\n            value={index}\r\n            onClick={(e, data) => {\r\n              if (\r\n                this.state.selectedTeam === null ||\r\n                this.selectedMatchDay === null\r\n              ) {\r\n                this.setState({ error: \"Select Team And Match\" });\r\n                return;\r\n              }\r\n\r\n              if (this.state.error) {\r\n                this.setState({ error: \"\" });\r\n              }\r\n\r\n              const league = _.cloneDeep(this.state.league);\r\n              const player =\r\n                league.teams[this.state.selectedTeam].players[data.value];\r\n              // Delete player from team\r\n              league.teams[this.state.selectedTeam].players.splice(\r\n                data.value,\r\n                1\r\n              );\r\n\r\n              // // Add player back to Open\r\n              // player[\"owner\"] = \"Open\";\r\n              // player[\"start\"] = 0;\r\n              // player[\"end\"] = 100;\r\n              // delete player[\"active\"];\r\n              // league.open.push(player);\r\n\r\n              this.setState({ league: league });\r\n            }}\r\n          >\r\n            <Icon color=\"black\" name=\"trash\" />\r\n          </Button>\r\n        );\r\n      } else {\r\n        return <div></div>;\r\n      }\r\n    };\r\n    const players = () => {\r\n      if (!(this.state.selectedTeam == null)) {\r\n        return this.state.league.teams[this.state.selectedTeam].players.map(\r\n          (player, index) => {\r\n            return (\r\n              <Grid.Row divided index={index}>\r\n                <Grid.Column width={6}>\r\n                  <Label color={playerColor(player.active)} size=\"large\">\r\n                    {player.name}\r\n                  </Label>\r\n                </Grid.Column>\r\n                <Grid.Column>{player.start}</Grid.Column>\r\n                <Grid.Column>{player.end}</Grid.Column>\r\n                <Grid.Column width={1}>\r\n                  {renderDropButton(index, player.active)}\r\n                </Grid.Column>\r\n\r\n                <Grid.Column width={1}>\r\n                  {renderDeleteButton(index, player.active)}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            );\r\n          }\r\n        );\r\n      } else {\r\n        return <div></div>;\r\n      }\r\n    };\r\n\r\n    const playersToAdd = () => {\r\n      return this.state.league.open.map((player, index) => {\r\n        return {\r\n          key: index,\r\n          text: player[\"name\"],\r\n          value: index,\r\n        };\r\n      });\r\n    };\r\n\r\n    const matches = () => {\r\n      return this.props.matches.map((match, index) => {\r\n        return {\r\n          key: index,\r\n          text: match[\"number\"],\r\n          value: index,\r\n        };\r\n      });\r\n    };\r\n\r\n    const renderSaveReponse = () => {\r\n      if (this.props.response) {\r\n        return (\r\n          <Button icon>\r\n            <Icon color=\"green\" name=\"check\" />\r\n          </Button>\r\n        );\r\n      } else {\r\n        return <div></div>;\r\n      }\r\n    };\r\n\r\n    const renderForm = () => {\r\n      return (\r\n        <Form>\r\n          <Grid container={true}>\r\n            <Grid.Row></Grid.Row>\r\n            <Grid.Row></Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Header as=\"h4\">\r\n                  Manage \"\r\n                  {this.state.league ? this.state.league.name : \"Loading..\"}\"\r\n                </Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={6}>\r\n                <Form.Dropdown\r\n                  placeholder=\"Team\"\r\n                  fluid\r\n                  selection\r\n                  options={teams()}\r\n                  onChange={(e, data) => {\r\n                    this.setState({ selectedTeam: data.value });\r\n                  }}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={6}>\r\n                <Form.Dropdown\r\n                  placeholder=\"Match Day\"\r\n                  fluid\r\n                  selection\r\n                  options={matches()}\r\n                  onChange={(e, data) => {\r\n                    this.setState({ selectedMatchDay: data.value });\r\n                  }}\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={6}>\r\n                <Form.Dropdown\r\n                  placeholder=\"Player\"\r\n                  fluid\r\n                  selection\r\n                  search\r\n                  label=\"Add Player\"\r\n                  options={playersToAdd()}\r\n                  onChange={(e, data) => {\r\n                    this.setState({ selectedPlayer: data.value });\r\n                  }}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column verticalAlign=\"bottom\">\r\n                <Button\r\n                  color=\"blue\"\r\n                  size=\"large\"\r\n                  onClick={() => {\r\n                    if (\r\n                      this.state.selectedTeam === null ||\r\n                      this.selectedMatchDay === null ||\r\n                      this.state.selectedPlayer === null\r\n                    ) {\r\n                      this.setState({ error: \"Select Team,Match and Player\" });\r\n                      return;\r\n                    }\r\n\r\n                    if (this.state.error) {\r\n                      this.setState({ error: \"\" });\r\n                    }\r\n\r\n                    const league = _.cloneDeep(this.state.league);\r\n                    const player = league.open[this.state.selectedPlayer];\r\n                    player[\"active\"] = 1;\r\n                    player[\"start\"] = this.state.selectedMatchDay + 1;\r\n                    player[\"owner\"] =\r\n                      league.teams[this.state.selectedTeam].name;\r\n                    league.open.splice(this.state.selectedPlayer, 1);\r\n                    league.teams[this.state.selectedTeam].players.push(player);\r\n                    this.setState({ league: league });\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row></Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Header as=\"h4\">Players</Header>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  icon\r\n                  onClick={() => {\r\n                    const league = _.cloneDeep(this.state.league);\r\n                    delete league[\"_id\"];\r\n                    this.props.setLeague(this.props.leagueid, league);\r\n                  }}\r\n                >\r\n                  <Icon color=\"black\" name=\"save\" />\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>{renderSaveReponse()}</Grid.Column>\r\n            </Grid.Row>\r\n            {players()}\r\n            <Grid.Row>\r\n              <Grid.Column>{this.state.error}</Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Form>\r\n      );\r\n    };\r\n\r\n    return this.state.league ? renderForm() : <div>Loading</div>;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTeam: null,\r\n      selectedPlayer: null,\r\n      selectedMatchDay: null,\r\n      error: \"\",\r\n      league: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getLeague(this.props.leagueid);\r\n    this.props.getMatches();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.league === null && this.props.league) {\r\n      this.setState({ league: this.props.league });\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    matches: state.league.matches,\r\n    league: state.league.current_league,\r\n    response: state.league.response,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getLeague, getMatches, setLeague })(\r\n  ManageLeagueView\r\n);\r\n","import React from \"react\";\r\nimport ManageLeagueView from \"./ManageLeagueView\";\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst ManageLeague = () => {\r\n  let { leagueid } = useParams();\r\n  let { path, url } = useRouteMatch();\r\n  console.log(leagueid, path, url);\r\n  return <ManageLeagueView leagueid={leagueid} path={path} url={url} />;\r\n};\r\n\r\nexport default ManageLeague;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllLeagues } from \"../../actions/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeagueItemView from \"./LeagueItemView\";\r\n\r\n// We will get the list of actions at later point!!\r\nclass LeagueListView extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getAllLeagues();\r\n  }\r\n  // Here will have to create the list of leagues and button to create a new league\r\n\r\n  render() {\r\n    const leagues = this.props.leagues.map((league) => {\r\n      return (\r\n        <div class=\"row\" key={league.$oid}>\r\n          <div class=\"column\" key={league[\"_id\"].$oid}>\r\n            <Link to={`/league/${league[\"_id\"].$oid}`}>{league.name}</Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div class=\"ui two column grid container\">\r\n        <div class=\"row\"></div>\r\n        <div class=\"row\">\r\n          <h2>Leagues</h2>\r\n        </div>\r\n        {leagues}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { leagues: state.league.leagues };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getAllLeagues })(LeagueListView);\r\n","import React from \"react\";\r\nimport LeagueListView from \"./LeagueListView\";\r\n\r\n// Here is where will use the routes and get the history object and then\r\n// go back to previous page after the league creation\r\nconst LeagueList = () => {\r\n  return <LeagueListView></LeagueListView>;\r\n};\r\n\r\nexport default LeagueList;\r\n","import React from \"react\";\r\nimport ChartRace from \"react-chart-race\";\r\nimport { Grid, Label, Button } from \"semantic-ui-react\";\r\n\r\nclass BarChartRace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(props.data);\r\n    // console.log(props.data.length);\r\n    this.state = {\r\n      data: [],\r\n      matchNum: 0,\r\n      intervalRunning: 1,\r\n    };\r\n    this.startAnimationInterval = setInterval(() => {\r\n      this.startAnimation();\r\n    }, 500);\r\n  }\r\n\r\n  startAnimation = () => {\r\n    const data = this.props.data[this.state.matchNum];\r\n    this.setState({ data: data, matchNum: this.state.matchNum + 1 });\r\n    if (this.state.matchNum == this.props.data.length) {\r\n      clearInterval(this.startAnimationInterval);\r\n      this.setState({ intervalRunning: 0 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.data) {\r\n      return (\r\n        <Grid container>\r\n          <Grid.Row></Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={11}>\r\n              <Label>Match Number {this.state.matchNum}</Label>\r\n            </Grid.Column>\r\n            <Grid.Column textAlign=\"right\" width={1}>\r\n              <Button\r\n                size=\"tiny\"\r\n                onClick={() => {\r\n                  this.setState({ matchNum: 0, intervalRunning: 1 });\r\n                  this.startAnimationInterval = setInterval(() => {\r\n                    this.startAnimation();\r\n                  }, 500);\r\n                }}\r\n                disabled={this.state.intervalRunning}\r\n              >\r\n                Replay\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={12}>\r\n              <ChartRace\r\n                data={this.state.data}\r\n                backgroundColor=\"#FFFFFF\"\r\n                width={760}\r\n                padding={0}\r\n                itemHeight={58}\r\n                gap={12}\r\n                titleStyle={{ font: \"normal 400 13px Arial\", color: \"#000\" }}\r\n                valueStyle={{\r\n                  font: \"normal 400 11px Arial\",\r\n                  color: \"rgba(0,0,0, 0.42)\",\r\n                }}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row></Grid.Row>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BarChartRace;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getScores, getLeague } from \"../../actions/index\";\r\nimport \"./LeagueView.css\";\r\nimport { Accordion, Icon, Item, Table, Grid, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport BarChartRace from \"./BarChartRace\";\r\n\r\nclass LeagueView extends React.Component {\r\n  state = { activeIndex: -1 };\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.current_score) {\r\n      const sorted_scores = this.props.current_score.sort(\r\n        (a, b) => parseInt(b.points) - parseInt(a.points)\r\n      );\r\n\r\n      const detailedScore = (players, condition = 0) => {\r\n        if (condition == 0) {\r\n          condition = Object.keys(players).length;\r\n        }\r\n        const playerList = Object.keys(players).map((key) => players[key]);\r\n\r\n        const sortedPlayers = playerList.sort(\r\n          (a, b) => parseInt(b.points) - parseInt(a.points)\r\n        );\r\n\r\n        const playersItems = playerList\r\n          .slice(0, condition)\r\n          .map((player, index) => {\r\n            return (\r\n              <Table.Row key={index}>\r\n                <Table.Cell>{_.startCase(_.toLower(player.name))}</Table.Cell>\r\n                <Table.Cell>{player.points}</Table.Cell>\r\n                <Table.Cell>{player.categories.batting}</Table.Cell>\r\n                <Table.Cell>{player.categories.bowling}</Table.Cell>\r\n                <Table.Cell>{player.categories.fielding}</Table.Cell>\r\n                <Table.Cell>{player.categories.awards}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          });\r\n\r\n        return playersItems;\r\n      };\r\n\r\n      const scores = sorted_scores\r\n        .filter((score) => score.owner !== \"open\")\r\n        .map((score, index) => {\r\n          const { activeIndex } = this.state;\r\n          return (\r\n            <div>\r\n              <Accordion.Title\r\n                active={activeIndex === index}\r\n                index={index}\r\n                onClick={this.handleClick}\r\n              >\r\n                <div class=\"ui two column grid\">\r\n                  <div class=\"column left aligned\">\r\n                    <Icon name=\"dropdown\" />\r\n                    <span>{score.owner}</span>\r\n                  </div>\r\n                  <div class=\"column right aligned\">\r\n                    <span>{score.points}</span>\r\n                  </div>\r\n                </div>\r\n              </Accordion.Title>\r\n              <Accordion.Content active={activeIndex === index}>\r\n                <Table size=\"small\" unstackable compact>\r\n                  <Table.Header>\r\n                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                    <Table.HeaderCell>Points</Table.HeaderCell>\r\n                    <Table.HeaderCell>Batting</Table.HeaderCell>\r\n                    <Table.HeaderCell>Bowling</Table.HeaderCell>\r\n                    <Table.HeaderCell>Fielding</Table.HeaderCell>\r\n                    <Table.HeaderCell>Awards</Table.HeaderCell>\r\n                  </Table.Header>\r\n\r\n                  <Table.Body>{detailedScore(score.players)}</Table.Body>\r\n                </Table>\r\n              </Accordion.Content>\r\n            </div>\r\n          );\r\n        });\r\n\r\n      const freeagentscores = sorted_scores\r\n        .filter((score) => score.owner === \"open\")\r\n        .map((score, index) => {\r\n          return (\r\n            <Table size=\"small\" unstackable compact>\r\n              <Table.Header>\r\n                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                <Table.HeaderCell>Points</Table.HeaderCell>\r\n                <Table.HeaderCell>Batting</Table.HeaderCell>\r\n                <Table.HeaderCell>Bowling</Table.HeaderCell>\r\n                <Table.HeaderCell>Fielding</Table.HeaderCell>\r\n                <Table.HeaderCell>Awards</Table.HeaderCell>\r\n              </Table.Header>\r\n\r\n              <Table.Body>{detailedScore(score.players, 10)}</Table.Body>\r\n            </Table>\r\n          );\r\n        });\r\n\r\n      return (\r\n        <div class=\"ui one column grid container\">\r\n          <div class=\"row\"></div>\r\n          <div class=\"row\"></div>\r\n          {/* <div class=\"row\">\r\n          <h2>{map[this.props.leagueid]}</h2>\r\n        </div> */}\r\n          <div class=\"row\"></div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <Link to={`${this.props.url}/manage`}>\r\n                <Button>Manage</Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <h4>{this.props.league ? this.props.league.name : \"\"}</h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <b>Standings</b>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <Accordion styled fluid>\r\n                {scores}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <b>Top 10 Free Agents</b>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <Accordion styled fluid>\r\n                {freeagentscores}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <div className=\"groove\">\r\n                <BarChartRace data={this.props.scores_by_match} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\"></div>\r\n          <div class=\"row\"></div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getScores(this.props.leagueid);\r\n    this.props.getLeague(this.props.leagueid);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    current_score: state.scores.current_score.scoresbyowner,\r\n    scores_by_match: state.scores.current_score.scoresbymatch,\r\n    league: state.league.current_league,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getScores, getLeague })(LeagueView);\r\n","import React from \"react\";\r\nimport LeagueView from \"./LeagueView\";\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst League = () => {\r\n  let { leagueid } = useParams();\r\n  let { path, url } = useRouteMatch();\r\n  return <LeagueView leagueid={leagueid} path={path} url={url} />;\r\n};\r\n\r\nexport default League;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport TeamView from \"../team/TeamView\";\r\nimport CreateLeagueView from \"../home/CreateLeagueView\";\r\nimport CreateTeamView from \"../league/CreateTeamView\";\r\nimport ManageLeague from \"../league/ManageLeague\";\r\nimport LeagueList from \"../home/LeagueList\";\r\nimport League from \"../league/League\";\r\n\r\nconst Leagues = () => {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      {/* <Route path={`${path}/team/:teamid`}>\r\n        <TeamView />\r\n      </Route>\r\n      <Route path={`${path}/createteam`}>\r\n        <CreateTeamView />\r\n      </Route> */}\r\n      <Route path={`${path}/manage`}>\r\n        <ManageLeague />\r\n      </Route>\r\n      <Route path={`${path}`}>\r\n        <League />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst AppRouter = (props) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/league/:leagueid\">\r\n          <Leagues />\r\n        </Route>\r\n        {/* <Route path=\"/createleague\">\r\n          <CreateLeagueView />\r\n        </Route> */}\r\n        <Route exact path=\"/\">\r\n          <LeagueList />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { signIn, setAuthState } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport AppRouter from \"./router/AppRouter\";\r\nimport Loading from \"./util/Loading\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\n// This is a function based component\r\n// Ideally if the user is signed In, display the home page or the previous saved state, whatever!!\r\n// The previously loaded state will come from te backend as a JSON -- Duh!!\r\n// We'll also need a mapStateToProps here\r\n\r\n// So what properties does the app have\r\n// User Details and Whether User is signed in or not??\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    // For now lets skip the login flow\r\n    // if (this.props.isSignedIn == null){\r\n    //     return <Loading></Loading>\r\n    // }else{\r\n    //     return <AppRouter isSignedIn={this.props.isSignedIn}></AppRouter>\r\n    // }\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <AppRouter></AppRouter>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, setAuthState })(App);\r\n","// Every reducer will have a set of actions to define logic for!\r\n// Then we have the initial state!! <-- this is what we will access every time. THe actual data we are interested in\r\n// The the final function which will take the state and an action <-- this is the core reducer functopm\r\nimport { SIGN_IN, SIGN_OUT, SET_AUTH_STATE } from \"../actions/types\";\r\n\r\n// Initializer state for our state object\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null,\r\n  auth_token: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        userId: action.payload.userId,\r\n        auth_token: action.payload.auth_token,\r\n      };\r\n\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null, auth_token: null };\r\n\r\n    case SET_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        isSignedIn: action.payload.authState.isSignedIn,\r\n        userId: action.payload.authState.userId,\r\n        auth_token: action.payload.authState.auth_token,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_ALL_LEAGUES,\r\n  GET_LEAGUE,\r\n  SET_LEAGUE,\r\n  GET_MATCHES,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  leagues: [],\r\n  matches: [],\r\n  current_league: null,\r\n  response: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_LEAGUES:\r\n      return { ...state, leagues: action.payload };\r\n\r\n    case GET_LEAGUE:\r\n      return { ...state, current_league: action.payload };\r\n\r\n    case SET_LEAGUE:\r\n      return { ...state, response: action.payload };\r\n\r\n    case GET_MATCHES:\r\n      return { ...state, matches: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_SCORES } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  current_score: [],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_SCORES:\r\n      return { ...state, current_score: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport leagueReducer from \"./leagueReducer\";\r\nimport scoresReducer from \"./scoresReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  league: leagueReducer,\r\n  scores: scoresReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport thunk from \"redux-thunk\";\r\nimport \"semantic-ui-css/semantic.css\";\r\n\r\n// npm install --save redux react-redux redux-think react-router-dom lodash\r\n\r\n// document is an important global object -- this could contain a lot of stuff!!\r\n\r\n// There are three important things needed for a Redux Store\r\n// The store itself (called via createStore duh...), the Provider which takes the store and encapsulates the the whole app\r\n// the createStore will take a list of reducers!!...and also a list of any middelware (things like reduc_thunk)\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// The encapsulation\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}